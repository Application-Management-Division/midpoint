<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (C) 2010-2021 Evolveum and contributors
  ~
  ~ This work is dual-licensed under the Apache License 2.0
  ~ and European Union Public License. See LICENSE file for details.
  -->

<xsd:schema targetNamespace="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
            xmlns:tns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:a="http://prism.evolveum.com/xml/ns/public/annotation-3"
            xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
            xmlns:t="http://prism.evolveum.com/xml/ns/public/types-3"
            xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3"
            xmlns:s="http://midpoint.evolveum.com/xml/ns/public/model/scripting-3"
            xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
            elementFormDefault="qualified"
            xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
            jaxb:extensionBindingPrefixes="xjc"
            jaxb:version="2.0">

    <xsd:annotation>
        <xsd:documentation>
            Resource-related parts of the common schema.
        </xsd:documentation>
    </xsd:annotation>

    <!-- Don't provide schemaLocation here, as it causes xjc to really contact the URIs (!) -->
    <xsd:import namespace="http://prism.evolveum.com/xml/ns/public/annotation-3"/>
    <xsd:import namespace="http://prism.evolveum.com/xml/ns/public/types-3"/>
    <xsd:import namespace="http://prism.evolveum.com/xml/ns/public/query-3"/>
    <xsd:import namespace="http://midpoint.evolveum.com/xml/ns/public/model/scripting-3"/>

    <xsd:include schemaLocation="http://midpoint.evolveum.com/xml/ns/public/common/common-core-3" />

    <xsd:complexType name="ResourceObjectTypeDelineationType">
        <xsd:annotation>
            <xsd:documentation>
                Delineates the boundary of a resource object type (i.e. objects that belong to that type).
            </xsd:documentation>
            <xsd:appinfo>
                <a:container/>
                <a:since>4.6</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="baseContext" type="tns:ResourceObjectReferenceType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        The definition of base context (resource object container). This object will be used
                        as a base for searches for objects of this type. Usually only the objects that are
                        hierarchically below the baseContext are returned by such a search.
                        E.g. this is used to specify LDAP organizationalUnit that contains users or groups
                        of particular type.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="searchHierarchyScope" type="tns:SearchHierarchyScopeType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Definition of search hierarchy scope. It specifies how "deep" the search should go
                        into the object hierarchy. It is only applicable to resources that support hierarchical
                        organization of objects (e.g. LDAP resources).
                    </xsd:documentation>
                    <xsd:appinfo>
                        <a:since>4.0</a:since>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="filter" type="q:SearchFilterType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        A filter that defines the object set. Overrides any filter(s) defined in the parent type definitions.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="filterClause" type="q:SearchFilterType" minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation>
                        Filter clauses that define (as a conjunction) the object set. Adds to any filter clauses or to a filter
                        defined in the parent type definitions.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="classificationCondition" type="c:ExpressionType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Expression that is evaluated to check whether a resource object is of given type.
                        It is assumed to return a boolean value. (If no condition is present then it is assumed
                        to be always true, i.e. the classification is done using the other means.)
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:long"/>
    </xsd:complexType>

    <xsd:complexType name="SynchronizationReactionsType">
        <xsd:annotation>
            <xsd:documentation>
                Defines reaction(s) to synchronization situations, plus other synchronization settings.

                TODO better name, better structure?
            </xsd:documentation>
            <xsd:appinfo>
                <a:container>true</a:container>
                <a:since>4.6</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="opportunistic" type="xsd:boolean" minOccurs="0" default="true">
                <xsd:annotation>
                    <xsd:documentation>
                        If set to true midPoint will try to link and synchronize objects whenever possible.
                        E.g. it will link accounts in a case if an account with a conflicting account is found
                        and correlation expression matches. MidPoint can be quite aggressive in this mode therefore
                        this switch is used to turn it off. It is on by default.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="defaultSettings" type="tns:SynchronizationReactionsDefaultSettingsType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Settings that are applied to all clockwork-based actions defined here.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="reaction" type="tns:SynchronizationReactionNewType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:long"/>
    </xsd:complexType>

    <xsd:complexType name="SynchronizationReactionsDefaultSettingsType">
        <xsd:annotation>
            <xsd:documentation>
                Default settings for synchronization reactions.
            </xsd:documentation>
            <xsd:appinfo>
                <a:container>true</a:container>
                <a:since>4.6</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="reconcile" type="xsd:boolean" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        TODO
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="reconcileAll" type="xsd:boolean" minOccurs="0" default="false">
                <xsd:annotation>
                    <xsd:documentation>
                        If set to true, applicable synchronization reactions will attempt to reconcile the real attributes
                        from all resource with the state of the midPoint repository. This may require additional read and
                        recompute, therefore may be slightly less efficient.

                        If set to false, attribute values will not be reconciled.

                        If set to true, the full user reconciliation will be done.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="limitPropagation" type="xsd:boolean" minOccurs="0"/>
            <xsd:element name="objectTemplateRef" type="tns:ObjectReferenceType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Object template used in case the focus object is created or modified.
                        This overrides other template definitions (system global, resource).
                    </xsd:documentation>
                    <xsd:appinfo>
                        <a:objectReferenceTargetType>tns:ObjectTemplateType</a:objectReferenceTargetType>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="executeOptions" type="c:ModelExecuteOptionsType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Model execute options that will be used when invoking this reaction.
                        Options explicitly specified here take precedence over any options derived
                        from the context or other parameters (like "recompute"). So please use with care.
                    </xsd:documentation>
                    <xsd:appinfo>
                        <a:since>4.2</a:since>
                        <a:experimental>true</a:experimental>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="SynchronizationReactionNewType">
        <xsd:annotation>
            <xsd:documentation>
                Reaction to a synchronization situation(s).
                There is a list of situations to which this entry pertains.
                The list is further optionally qualified by channel(s) and a condition.
                Only if a situation (any of), a channel (any of), and the condition all match, then the action(s) are applied.
                The list of reactions is evaluated in the (optional) order given. Entries without explicit order are evaluated
                last.
            </xsd:documentation>
            <xsd:appinfo>
                <a:container>true</a:container>
                <a:since>4.6</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string" minOccurs="0"/>
            <xsd:element ref="tns:description" minOccurs="0"/>
            <xsd:element ref="tns:documentation" minOccurs="0"/>
            <xsd:element name="order" type="xsd:int" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Order in which this reaction is to be evaluated. (Related to other reactions.) Smaller numbers
                        go first. Entries with no order go last.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="situation" type="tns:SynchronizationSituationType" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation>
                        Defines a particular synchronization situation.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="channel" type="xsd:anyURI" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="condition" type="tns:ExpressionType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Expression that is evaluated to check whether this reaction is applicable in a particular
                        context. It is assumed to return a boolean value. If it returns 'true' then this reaction
                        will be applied. If it returns 'false' it will be ignored.
                    </xsd:documentation>
                    <xsd:appinfo>
                        <a:since>4.1</a:since>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="actions" type="tns:SynchronizationActionsNewType" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="SynchronizationActionsNewType">
        <xsd:annotation>
            <xsd:documentation>
                Action(s) that have to be executed in specified synchronization situation.
            </xsd:documentation>
            <xsd:appinfo>
                <a:container>true</a:container>
                <a:since>4.6</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="synchronize" type="tns:SynchronizeSynchronizationActionType" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="link" type="tns:LinkSynchronizationActionType" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="unlink" type="tns:UnlinkSynchronizationActionType" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="addFocus" type="tns:AddFocusSynchronizationActionType" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="deleteFocus" type="tns:DeleteFocusSynchronizationActionType" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="inactivateFocus" type="tns:InactivateFocusSynchronizationActionType" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="deleteShadow" type="tns:DeleteShadowSynchronizationActionType" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="inactivateShadow" type="tns:InactivateShadowSynchronizationActionType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="AbstractSynchronizationActionType">
        <xsd:annotation>
            <xsd:documentation>
                Abstract synchronization action - either clockwork-based or arbitrary one.
            </xsd:documentation>
            <xsd:appinfo>
                <a:container>true</a:container>
                <a:since>4.6</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string" minOccurs="0"/>
            <xsd:element ref="tns:description" minOccurs="0"/>
            <xsd:element ref="tns:documentation" minOccurs="0"/>
            <xsd:element name="order" type="xsd:int" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Order in which this action is to be executed, if there are more of them. (Related to other actions.)
                        Smaller numbers go first. Entries with no order go last.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:long"/>
    </xsd:complexType>

    <xsd:complexType name="AbstractClockworkBasedSynchronizationActionType">
        <xsd:annotation>
            <xsd:documentation>
                Abstract clockwork-based synchronization action.
            </xsd:documentation>
            <xsd:appinfo>
                <a:container>true</a:container>
                <a:since>4.6</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="tns:AbstractSynchronizationActionType">
                <xsd:sequence>
                    <xsd:element name="synchronize" type="xsd:boolean" minOccurs="0" default="true">
                        <xsd:annotation>
                            <xsd:documentation>
                                If set to false, the clockwork will not run. So e.g. linking and unlinking will be done
                                in "fast" way. TODO or should we create separate actions for this?
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="reconcile" type="xsd:boolean" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
                                TODO
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="reconcileAll" type="xsd:boolean" minOccurs="0" default="false">
                        <xsd:annotation>
                            <xsd:documentation>
                                If set to true, applicable synchronization reactions will attempt to reconcile the real attributes
                                from all resource with the state of the midPoint repository. This may require additional read and
                                recompute, therefore may be slightly less efficient.

                                If set to false, attribute values will not be reconciled.

                                If set to true, the full user reconciliation will be done.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="limitPropagation" type="xsd:boolean" minOccurs="0"/>
                    <xsd:element name="objectTemplateRef" type="tns:ObjectReferenceType" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
                                Object template used in case the focus object is created or modified.
                                This overrides other template definitions (system global, resource).
                            </xsd:documentation>
                            <xsd:appinfo>
                                <a:objectReferenceTargetType>tns:ObjectTemplateType</a:objectReferenceTargetType>
                            </xsd:appinfo>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="executeOptions" type="c:ModelExecuteOptionsType" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
                                Model execute options that will be used when invoking this reaction.
                                Options explicitly specified here take precedence over any options derived
                                from the context or other parameters (like "recompute"). So please use with care.
                            </xsd:documentation>
                            <xsd:appinfo>
                                <a:since>4.2</a:since>
                                <a:experimental>true</a:experimental>
                            </xsd:appinfo>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="SynchronizeSynchronizationActionType">
        <xsd:annotation>
            <xsd:documentation>
                Plain "synchronize" (clockwork-based) action.
            </xsd:documentation>
            <xsd:appinfo>
                <a:container>true</a:container>
                <a:since>4.6</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="tns:AbstractClockworkBasedSynchronizationActionType"/>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="LinkSynchronizationActionType">
        <xsd:annotation>
            <xsd:documentation>
                Links resource object to its owning focus. TODO what if there's none?
            </xsd:documentation>
            <xsd:appinfo>
                <a:container>true</a:container>
                <a:since>4.6</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="tns:AbstractClockworkBasedSynchronizationActionType"/>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="UnlinkSynchronizationActionType">
        <xsd:annotation>
            <xsd:documentation>
                Unlinks resource object from its owning focus. TODO what if there's none?
            </xsd:documentation>
            <xsd:appinfo>
                <a:container>true</a:container>
                <a:since>4.6</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="tns:AbstractClockworkBasedSynchronizationActionType"/>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="AddFocusSynchronizationActionType">
        <xsd:annotation>
            <xsd:documentation>
                Creates an owning focus for the resource object. TODO what if it already exists?
            </xsd:documentation>
            <xsd:appinfo>
                <a:container>true</a:container>
                <a:since>4.6</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="tns:AbstractClockworkBasedSynchronizationActionType"/>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="DeleteFocusSynchronizationActionType">
        <xsd:annotation>
            <xsd:documentation>
                Deletes the owning focus for the resource object. TODO what if it's not there?
            </xsd:documentation>
            <xsd:appinfo>
                <a:container>true</a:container>
                <a:since>4.6</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="tns:AbstractClockworkBasedSynchronizationActionType"/>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="InactivateFocusSynchronizationActionType">
        <xsd:annotation>
            <xsd:documentation>
                Inactivates the owning focus for the resource object. TODO what if it's not there?
            </xsd:documentation>
            <xsd:appinfo>
                <a:container>true</a:container>
                <a:since>4.6</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="tns:AbstractClockworkBasedSynchronizationActionType"/>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="DeleteShadowSynchronizationActionType">
        <xsd:annotation>
            <xsd:documentation>
                Deletes the resource object.
            </xsd:documentation>
            <xsd:appinfo>
                <a:container>true</a:container>
                <a:since>4.6</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="tns:AbstractClockworkBasedSynchronizationActionType"/>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="InactivateShadowSynchronizationActionType">
        <xsd:annotation>
            <xsd:documentation>
                Inactivates the resource object.
            </xsd:documentation>
            <xsd:appinfo>
                <a:container>true</a:container>
                <a:since>4.6</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="tns:AbstractClockworkBasedSynchronizationActionType"/>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="SuperResourceDeclarationType">
        <xsd:annotation>
            <xsd:documentation>
                Declares a "super-resource".
            </xsd:documentation>
            <xsd:appinfo>
                <a:container>true</a:container>
                <a:since>4.6</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="resourceRef" type="tns:ObjectReferenceType">
                <xsd:annotation>
                    <xsd:documentation>
                        The reference to the "super-resource".
                    </xsd:documentation>
                    <xsd:appinfo>
                        <a:objectReferenceTargetType>tns:ResourceType</a:objectReferenceTargetType>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <!-- inheritance options may be included later -->
        </xsd:sequence>
    </xsd:complexType>
</xsd:schema>
