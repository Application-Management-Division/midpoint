podTemplate(
        activeDeadlineSeconds: 7200,
        idleMinutes: 1,
        workspaceVolume: dynamicPVC(requestsSize: "20Gi"),
        yaml:'''
spec:
  securityContext:
    fsGroup: 1000
''',
        containers: [
                containerTemplate(name: 'jnlp',
                        image: 'jenkins/inbound-agent:4.10-3-alpine',
                        runAsUser: '0',
                        resourceLimitCpu: '900m',
                        resourceLimitMemory: '1Gi',
                        resourceRequestCpu: '900m',
                        resourceRequestMemory: '1Gi'),
                containerTemplate(name: 'maven',
                        image: 'maven:3.8.5-openjdk-11-slim',
                        ttyEnabled: true,
                        command: 'cat',
                        resourceLimitCpu: '4',
                        resourceLimitMemory: '8Gi')
        ]
) {
    node(POD_LABEL) {
        stage("checkout") {
            git branch: "${BRANCH}",
                    url: 'https://github.com/Evolveum/midpoint.git'
            echo "git checkout done..."
        }
        stage("build") {
            container('maven') {
                try {
                    sh """#!/bin/bash
                        if [ '${VERBOSE}' = '1' ]
                        then
	                        env | sort
	                        mvn --version
	                        df -h
			            fi

                        mvn clean install -DskipTests=true -P -dist

				        if [ '${VERBOSE}' = '1' ]
                        then
                            df -h
                        fi
                    """
                } catch (err) {
                    echo "Caught: ${err}"
                    currentBuild.result = 'FAILURE'
                }
            }
        }
        stage("conntest") {
            container('maven') {
                try {
                    sh """
                        mvn clean install -DskipConnTests=false -pl testing/conntest

				        if [ '${VERBOSE}' = '1' ]
                        then
                            df -h
                        fi
                    """
                } catch (err) {
                    echo "Caught: ${err}"
                    currentBuild.result = 'FAILURE'
                } finally {
                    step([$class: 'Publisher', reportFilenamePattern: '**/testng-results.xml'])
                }
            }
        }
    }
}
